
services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - api-service
    networks:
      - elastic-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true  
      - WDS_SOCKET_PORT=3000
    networks:
      - elastic-net
    depends_on:
      - api-service


  # Data Ingestion Service
  ingest-service:
    build:
      context: ./recommendation
      dockerfile: Dockerfile.ingest
    image: recommendation-ingest:latest
    depends_on:
      es01:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_URL=http://es01:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ES_PASSWORD:-changeme}
      - TRANSFORMERS_CACHE=/root/.cache/huggingface
      - HF_HOME=/root/.cache/huggingface
    volumes:
      - ./gumroad_data:/app/gumroad_data
      - ./huggingface_cache:/root/.cache/huggingface
    networks:
      - elastic-net
    command: ["python", "-m", "ingest.ingest"]

  api-service:
    build:
      context: ./recommendation
      dockerfile: Dockerfile.api
    image: recommendation-api:latest
    environment:
      - ELASTICSEARCH_URL=http://es01:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ES_PASSWORD:-changeme}
      - TRANSFORMERS_CACHE=/root/.cache/huggingface
      - HF_HOME=/root/.cache/huggingface
    ports:
      - "8000:8000"
    networks:
      - elastic-net
    volumes:
      - ./recommendation:/app/recommendation
      - ./huggingface_cache:/root/.cache/huggingface
    command: ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: unless-stopped
    depends_on:
        es01:
          condition: service_healthy

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      # Hot reload support
      - CHOKIDAR_USEPOLLING=true  
      - WDS_SOCKET_PORT=3000
    networks:
      - elastic-net
    depends_on:
      - api-service
      
networks:
  elastic-net:
    driver: bridge

volumes:
  elasticsearch-data: